* {
    box-sizing: border-box;
    margin: 0;
}

body {
    margin: 0;
}

.section {
    /* background-color: red; */
}

.container {
    --anyName: 24px;
    margin-inline: auto;
    padding-inline: var(--anyName);
    max-width: calc(1200px + 2 * var(--anyName));
    /* background-color: green; */
}

.wrapper {
    padding-block: 64px;
    /* background-color: blue; */
}

.button {
    font-size: 18px;
    background-color: slateblue;
    color: white;
    padding: 8px 16px;
    text-transform: capitalize;
    font-weight: 700;
    text-align: center;
    width: fit-content;
    border-radius: 8px;
}

.flex {
    width: 60%;
    margin-inline: auto;
    display: flex;
    justify-content: center;
    align-items: center;
    /* 세로로 정렬하는 상황에 justify는 센터 정렬을 의미 */
    /* flex는 기본 정렬 방향이 row 좌-우 임. */
}

.flex--dir-column {
    flex-direction: column;
}

.flex h2 {
    margin-bottom: 24px;
}

.flex p {
    text-align: center;
    margin-bottom: 20px;
}

.flex .button {
    margin-bottom: 36px;
}

.video {
    background-color: aqua;
    width: 100%;
    aspect-ratio: 16 / 9;

}

/* inline : 좌우용(위아래가 뭐 되던 상관하지 않을거다), padding : 상하용 */
/* w을 1200px 주고 패딩을 좌우 24px씩 줬을때... 최종 크기를 따지냐, 콘텐츠 크기만 따지냐?*/
/* --var ; 변수. 원하는 이름 적으면 만들 수 있다 */
/* 위처럼 공식을 짜놓으면 애초에 실수 자체가 생기지 않음. 개꿀 */
/* h태그는 기본 마진값이 있음. 이게 편할 때도 있지만 불편할 때가
더 많아서... * margin 0으로 설정하고 수정하는게 나음. */
/* 부모가 flex가 되면 자식은 flex 속성에 맞게 맞는 사이즈로 줄어든다.
그래서 좌우로 늘어나는 특징의 div도 위에 flex 먹으면 작아져서 0x0이 됨. */